services:
    db:
        image: mysql:8.4.4
        container_name: java_base_db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - mysql_data:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - java_network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:5.2.1
        container_name: java_base_phpmyadmin
        restart: unless-stopped
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        ports:
            - "8080:80"
        depends_on:
            - db
        networks:
            - java_network

    redis:
        image: redis:7.2.4
        container_name: java_base_redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        environment:
            REDIS_PASSWORD: ${REDIS_PASSWORD}
        command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
        volumes:
            - redis_data:/data
        networks:
            - java_network

    mongodb:
      image: mongo:7.0
      container_name: java_base_mongo
      restart: unless-stopped
      environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      ports:
        - "27017:27017"
      volumes:
        - mongo_data:/data/db
        - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
networks:
    java_network:
        driver: bridge

volumes:
    mysql_data:
    redis_data:
    mongo_data:
